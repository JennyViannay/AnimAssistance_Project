{% extends 'base.html.twig' %}

{% block title %} - Demande d'adoption{% endblock %}

{% block body %}
<div class="container">
    <div class="col">
        <h1>Demande d'adoption</h1>
        <div class="col jumbotron">
            {{ form_start(form, {
                "attr": {"id": "regForm"}
            }) }}

            {{ include('ask_for_adoption/_form.html.twig') }}

            <div style="overflow:auto;">
                <div style="float:right;">
                    <button type="button" class="btn-primary" id="prevBtn" onclick="nextPrev(-1)">Previous</button>
                    <button type="button" class="btn-primary" id="nextBtn" onclick="nextPrev(1)">Next</button>
                </div>
            </div>

            <!-- Circles which indicates the steps of the form: -->
            <div style="text-align:center;margin-top:40px;">
                {% for i in 0..6 %}
                <span class="step"></span>
                {% endfor %}
            </div>
            {{ form_end(form) }}
            <p><small>* Champs obligatoires</small></p>
            <div class="col-12 mt-5">
                <a href="{{ path('home') }}" class="btn btn-warning">Annuler ma demande d'adoption</a>
            </div>
        </div>
    </div>

</div>
{% endblock %}

{% block javascripts %}
<script>

    document.getElementById('ask_for_adoption_haveGarden').addEventListener('change', (e) => {
        if(e.target.value == 1){
            document.getElementById('garden').classList.remove('d-none')
        } else {
            document.getElementById('garden').classList.add('d-none')
        }
    })

    var currentTab = 0; // Current tab is set to be the first tab (0)
    showTab(currentTab); // Display the current tab

    function showTab(n) {
        // This function will display the specified tab of the form ...
        var x = document.getElementsByClassName("tab");
        x[n].style.display = "block";
        // ... and fix the Previous/Next buttons:
        if (n == 0) {
            document.getElementById("prevBtn").style.display = "none";
        } else {
            document.getElementById("prevBtn").style.display = "inline";
        }
        if (n == (x.length - 1)) {
            document.getElementById("nextBtn").innerHTML = "Submit";
        } else {
            document.getElementById("nextBtn").innerHTML = "Next";
        }
        // ... and run a function that displays the correct step indicator:
        fixStepIndicator(n)
    }

    function nextPrev(n) {
        // This function will figure out which tab to display
        var x = document.getElementsByClassName("tab");
        // Exit the function if any field in the current tab is invalid:
        if (n == 1 && !validateForm()) return false;
        // Hide the current tab:
        x[currentTab].style.display = "none";
        // Increase or decrease the current tab by 1:
        currentTab = currentTab + n;
        // if you have reached the end of the form... :
        if (currentTab >= x.length) {
            //...the form gets submitted:
            document.getElementById("regForm").submit();
            return false;
        }
        // Otherwise, display the correct tab:
        showTab(currentTab);
    }

    function validateForm() {
        // This function deals with validation of the form fields
        var x, y, i, valid = true;
        x = document.getElementsByClassName("tab");
        y = x[currentTab].getElementsByTagName("input");
        // A loop that checks every input field in the current tab:
        for (i = 0; i < y.length; i++) {

            // If a field is empty...
            if (y[i].value == "" 
            && y[i].id != 'ask_for_adoption_phoneBis'
            && y[i].id != 'ask_for_adoption_facebookProfile') {
                // add an "invalid" class to the field:
                y[i].className += " invalid";
                // and set the current valid status to false:
                valid = false;
            }
        }
        // If the valid status is true, mark the step as finished and valid:
        if (valid) {
            document.getElementsByClassName("step")[currentTab].className += " finish";
        }
        return valid; // return the valid status
    }

    function fixStepIndicator(n) {
        // This function removes the "active" class of all steps...
        var i, x = document.getElementsByClassName("step");
        for (i = 0; i < x.length; i++) {
            x[i].className = x[i].className.replace(" active", "");
        }
        //... and adds the "active" class to the current step:
        x[n].className += " active";
    }
</script>
{% endblock %}